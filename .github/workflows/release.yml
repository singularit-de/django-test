name: release

on:
  push:
    branches:
      - 'tests/mysql-mariadb'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MYSQL_DATABASE: test_db
      MYSQL_USER: test_user
      MYSQL_PASSWORD: password
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_PORT: 33061
    services:
      # Label used to access the service container
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: ${{env.MYSQL_ALLOW_EMPTY_PASSWORD}}
        ports:
          - 33061:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        version: [ "3.11" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - '${{matrix.version}}/**'
            docker:
              - 'Dockerfile'
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: steps.changes.outputs.src == 'true' || steps.changes.outputs.docker == 'true'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build the Python Docker image
        if: steps.changes.outputs.src == 'true' || steps.changes.outputs.docker == 'true'
        run: docker build ./${{matrix.version}} --tag my-temp-python-image:latest
      - name: Set actual python version
        if: steps.changes.outputs.src == 'true' || steps.changes.outputs.docker == 'true'
        run: echo "PYTHON_VERSION=$(docker run my-temp-python-image:latest python -V 2>&1 | grep -Po '(?<=Python )(.+)')" >> $GITHUB_ENV
      - name: Build the Docker image
        if: steps.changes.outputs.src == 'true' || steps.changes.outputs.docker == 'true'
        run: docker build . --tag orbisk/django-test:${{env.PYTHON_VERSION}} --tag orbisk/django-test:${{matrix.version}}
      - name: Test MySQL
        run: |
          mysql -h ${{env.MYSQL_HOST}} -u ${{env.MYSQL_ROOT_USERNAME}} ${{MYSQL_DATABASE}} -e "SELECT * FROM mytable"
          docker run --network host -v /"$(pwd)/tests":/app -w /app orbisk/django-test:${{env.PYTHON_VERSION}} sh -c "cd /app && pip install -r requirements.txt && python manage.py migrate app_mysql --database=mysql"
#      - name: Push Image
#        if: steps.changes.outputs.src == 'true' || steps.changes.outputs.docker == 'true'
#        run: docker push -a orbisk/django-test